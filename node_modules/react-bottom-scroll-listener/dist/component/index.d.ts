/**
 * @class BottomScrollListener
 *
 * A simple React component that lets you listen for when you have scrolled to the bottom.
 *
 */
import React, { Component } from 'react';
export interface Props {
    /** Required callback that will be invoked when scrolled to bottom */
    onBottom: () => void;
    /** Optional debounce in milliseconds, defaults to 200ms */
    debounce: number;
    /** Offset from bottom of page in pixels. E.g. 300 will trigger onBottom 300px from the bottom of the page */
    offset: number;
    /**
     *   Optional children to be rendered.
     *
     *   If children passed is a function, that function will be passed a React.RefObject<HTMLElement>
     *   that ref shall be passed to a child tag that will be used for the scrolling container.
     * */
    children?: React.ReactNode | (<T extends HTMLElement>(ref: React.Ref<T>) => React.ReactNode);
}
declare class BottomScrollListener extends Component<Props> {
    static defaultProps: {
        debounce: number;
        offset: number;
    };
    private optionalScrollContainerRef;
    constructor(props: Props);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleOnScroll(): void;
    render(): {} | null | undefined;
}
export default BottomScrollListener;
